openapi: 3.0.0
info:
  title: Food Saver API
  version: 1.0.0
  description: Food Saver auth and products routes 
paths:
  /login:
    post:
      summary: User login
      description: Authenticate a user and return a JWT access token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "user@example.com"
                password:
                  type: string
                  example: "password123"
      responses:
        '200':
          description: Successfully authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '401':
          description: Invalid email or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Bad email or password"
  /register:
    post:
      summary: User registration
      description: Register a new user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "user@example.com"
                password:
                  type: string
                  example: "password123"
      responses:
        '201':
          description: User successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "User created successfully"
        '400':
          description: Missing or invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Missing email or password"
  /logout:
    delete:
      summary: User logout
      description: Revoke the JWT of the authenticated user.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Token successfully revoked
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "JWT revoked"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Missing Authorization Header"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
